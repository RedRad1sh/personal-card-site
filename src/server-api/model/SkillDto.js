/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.69
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Tooltip from './Tooltip';

/**
 * The SkillDto model module.
 * @module model/SkillDto
 * @version v0
 */
export default class SkillDto {
  /**
   * Constructs a new <code>SkillDto</code>.
   * Skill model
   * @alias module:model/SkillDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SkillDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SkillDto} obj Optional instance to populate.
   * @return {module:model/SkillDto} The populated <code>SkillDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SkillDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('tooltip'))
        obj.tooltip = Tooltip.constructFromObject(data['tooltip']);
      if (data.hasOwnProperty('level'))
        obj.level = ApiClient.convertToType(data['level'], 'String');
      if (data.hasOwnProperty('children'))
        obj.children = ApiClient.convertToType(data['children'], [Object]);
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Unique identifier of the skill
 * @member {String} id
 */
SkillDto.prototype.id = undefined;

/**
 * Title of the skill
 * @member {String} title
 */
SkillDto.prototype.title = undefined;

/**
 * @member {module:model/Tooltip} tooltip
 */
SkillDto.prototype.tooltip = undefined;

/**
 * Allowed values for the <code>level</code> property.
 * @enum {String}
 * @readonly
 */
SkillDto.LevelEnum = {
  /**
   * value: "BASIC"
   * @const
   */
  BASIC: "BASIC",

  /**
   * value: "EASY"
   * @const
   */
  EASY: "EASY",

  /**
   * value: "MEDIUM"
   * @const
   */
  MEDIUM: "MEDIUM",

  /**
   * value: "HARD"
   * @const
   */
  HARD: "HARD",

  /**
   * value: "CHALLENGING"
   * @const
   */
  CHALLENGING: "CHALLENGING"
};
/**
 * Difficulty level of the skill
 * @member {module:model/SkillDto.LevelEnum} level
 */
SkillDto.prototype.level = undefined;

/**
 * Child skills
 * @member {Array.<Object>} children
 */
SkillDto.prototype.children = undefined;

/**
 * @member {Boolean} active
 */
SkillDto.prototype.active = undefined;

